class Vector
{
public:
	Vector();
	Vector(const Vector& other);
	~Vector();
	Vector& operator =(const Vector& other);
	void insert(int index, double value);
	void add(double value);
	void get(int index);
	int size();
	int capacity();
private:
	double* arr;
	int size;
	int capacity;
};


Vector::Vector()
{	
	arr = new double[512];
	size = 0;
	capacity = 512;
}


Vector::~Vector()
{
	size = 0;
	capacity = 0;
	delete[] arr;
	arr=0;
}


Vector::Vector(const Vector& other)
{
	capcity = other.capacity;
	size = other.size;
	arr = new double[capacity];
	for(int i=0; i<size; i++)
	{
		arr[i] = other.arr[i];
	}
}


Vector& Vector::operator =(const Vector& other)
{
	capcity = other.capacity;
	size = other.size;
	arr = new double[capacity];
	for(int i=0; i<size; i++)
	{
		arr[i] = other.arr[i];
	}
	return *this;
}

